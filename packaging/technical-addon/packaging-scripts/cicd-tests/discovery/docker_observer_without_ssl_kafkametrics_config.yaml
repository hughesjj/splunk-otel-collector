extensions:
  #docker_observer: # could try just mounting the socket too
  host_observer:

receivers:
  # set up otlp receiver to use its endpoints as assertion material
  discovery:
    embed_receiver_config: true
    receivers:
      kafkametrics:
        config:
          #resource_attributes:
          #  testdiscoveryparam: {{ .testdiscoveryparam }}
          client_id: "otel-integration-test"
          protocol_version: "2.0.0"
          scrapers:
            - brokers
        rule: type == "container" and any([name, image, command], {# matches "(?i)(.*)kafka(.*)"}) and not (command matches "splunk.discovery")
        status:
          metrics:
            - status: successful
              strict: kafka.brokers
              message: kafkametrics receiver is working!
          statements:
            - status: failed
              regexp: 'connect: network is unreachable'
              message: The container cannot be reached by the Collector. Make sure they're in the same network.
            - status: failed
              regexp: 'connect: connection refused'
              message: The container is refusing kafka connections.

    watch_observers:
      #- docker_observer
      - host_observer

# drop scrape_timestamp attributes until we can accept arbitrary values
processors:

exporters:
  debug:
    verbosity: detailed
  file/no_rotation:
    path: /discovery-logs/

service:
  telemetry:
    logs:
      level: debug
  extensions:
    #- docker_observer
    - host_observer
  pipelines:
    logs:
      receivers: ["discovery"]
      exporters: ["file/no_rotation", "debug"]
